name: Vercel Production Deployment

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

  LOCALIZELY_API_KEY: ${{ secrets.LOCALIZELY_API_KEY }}

  LOCALIZELY_URL: ${{ vars.LOCALIZELY_URL }}
  LOCALIZELY_PROJECT_ID: ${{ vars.LOCALIZELY_PROJECT_ID }}

  SUPPORTED_LOCALES: ${{ vars.SUPPORTED_LOCALES }}

on:
  push:
    branches:
      - main

  workflow_dispatch:

jobs:
  Deploy-Production:
    runs-on: ubuntu-latest
    environment: Production
    steps:
      - uses: actions/checkout@v2

      # Setup bun and sync the localization files
      - uses: oven-sh/setup-bun@v2

      - name: Cache node modules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - run: bun install

      - name: Sync Localization Files
        env:
          LOCALIZELY_API_KEY: ${{ env.LOCALIZELY_API_KEY }}
          LOCALIZELY_URL: ${{ env.LOCALIZELY_URL }}
          LOCALIZELY_PROJECT_ID: ${{ env.LOCALIZELY_PROJECT_ID }}
          SUPPORTED_LOCALES: ${{ env.SUPPORTED_LOCALES }}
        run: bun run scripts/syncLocalization.ts

      # Install Vercel CLI and deploy the project

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
